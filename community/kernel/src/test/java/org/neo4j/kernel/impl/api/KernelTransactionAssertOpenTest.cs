using System.Collections.Generic;

/*
 * Copyright (c) 2002-2019 "Neo4j,"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Neo4j is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
namespace Org.Neo4j.Kernel.Impl.Api
{
	using Rule = org.junit.Rule;
	using Test = org.junit.Test;
	using ExpectedException = org.junit.rules.ExpectedException;
	using RunWith = org.junit.runner.RunWith;
	using Parameterized = org.junit.runners.Parameterized;


	using NotInTransactionException = Org.Neo4j.Graphdb.NotInTransactionException;
	using TransactionTerminatedException = Org.Neo4j.Graphdb.TransactionTerminatedException;
	using Read = Org.Neo4j.@internal.Kernel.Api.Read;
	using SchemaRead = Org.Neo4j.@internal.Kernel.Api.SchemaRead;
	using Write = Org.Neo4j.@internal.Kernel.Api.Write;
	using KernelException = Org.Neo4j.@internal.Kernel.Api.exceptions.KernelException;
	using KernelTransaction = Org.Neo4j.Kernel.api.KernelTransaction;
	using Status = Org.Neo4j.Kernel.Api.Exceptions.Status;
	using AnonymousContext = Org.Neo4j.Kernel.api.security.AnonymousContext;
	using Values = Org.Neo4j.Values.Storable.Values;

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @RunWith(Parameterized.class) public class KernelTransactionAssertOpenTest extends KernelTransactionTestBase
	public class KernelTransactionAssertOpenTest : KernelTransactionTestBase
	{
//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @Rule public org.junit.rules.ExpectedException expectedException = org.junit.rules.ExpectedException.none();
		 public ExpectedException ExpectedException = ExpectedException.none();

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @Parameterized.Parameter(0) public String name;
		 public string Name;

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @Parameterized.Parameter(1) public Operation transactionOperation;
		 public Operation TransactionOperation;

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @Parameterized.Parameters(name = "{0}") public static java.util.Collection<Object[]> parameters()
		 public static ICollection<object[]> Parameters()
		 {
			  // Some samples of operations that should react to transaction killing. Not exhaustive.
			  return Arrays.asList( Operation( "nodeExists", ( read, write, schema ) => read.nodeExists( 0 ) ), Operation( "singleRelationship", ( read, write, schema ) => read.singleRelationship( 0, null ) ), Operation( "nodeCreate", ( read, write, schema ) => write.nodeCreate() ), Operation("relationshipSetProperty", (read, write, schema) => write.relationshipSetProperty(0, 2, Values.longValue(42))), Operation("indexesGetAll", (read, write, schema) => Schema.indexesGetAll()) );
		 }

		 private static object[] Operation( string name, Operation op )
		 {
			  return new object[]{ name, op };
		 }

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @Test(expected = org.neo4j.graphdb.TransactionTerminatedException.class) public void shouldThrowTerminateExceptionWhenTransactionTerminated() throws org.neo4j.internal.kernel.api.exceptions.KernelException
//JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in C#:
		 public virtual void ShouldThrowTerminateExceptionWhenTransactionTerminated()
		 {
			  KernelTransaction transaction = newTransaction( AnonymousContext.write() );

			  transaction.Success();
			  transaction.MarkForTermination( Org.Neo4j.Kernel.Api.Exceptions.Status_General.UnknownError );

			  TransactionOperation.operate( transaction.DataRead(), transaction.DataWrite(), transaction.SchemaRead() );
		 }

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @Test(expected = org.neo4j.graphdb.NotInTransactionException.class) public void shouldThrowNotInTransactionWhenTransactionClosedAndAccessingOperations() throws org.neo4j.internal.kernel.api.exceptions.KernelException
//JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in C#:
		 public virtual void ShouldThrowNotInTransactionWhenTransactionClosedAndAccessingOperations()
		 {
			  KernelTransaction transaction = newTransaction( AnonymousContext.write() );

			  transaction.Success();
			  transaction.Close();

			  TransactionOperation.operate( transaction.DataRead(), transaction.DataWrite(), transaction.SchemaRead() );
		 }

//JAVA TO C# CONVERTER TODO TASK: Most Java annotations will not have direct .NET equivalent attributes:
//ORIGINAL LINE: @Test(expected = org.neo4j.graphdb.NotInTransactionException.class) public void shouldThrowNotInTransactionWhenTransactionClosedAndAttemptingOperations() throws org.neo4j.internal.kernel.api.exceptions.KernelException
//JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in C#:
		 public virtual void ShouldThrowNotInTransactionWhenTransactionClosedAndAttemptingOperations()
		 {
			  KernelTransaction transaction = newTransaction( AnonymousContext.write() );

			  Read read = transaction.DataRead();
			  Write write = transaction.DataWrite();
			  SchemaRead schemaRead = transaction.SchemaRead();

			  transaction.Success();
			  transaction.Close();

			  TransactionOperation.operate( read, write, schemaRead );
		 }

		 internal interface Operation
		 {
//JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in C#:
//ORIGINAL LINE: void operate(org.neo4j.internal.kernel.api.Read read, org.neo4j.internal.kernel.api.Write write, org.neo4j.internal.kernel.api.SchemaRead schemaRead) throws org.neo4j.internal.kernel.api.exceptions.KernelException;
			  void Operate( Read read, Write write, SchemaRead schemaRead );
		 }
	}

}